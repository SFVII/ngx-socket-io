{"version":3,"file":"socket-front-update.js","sources":["ng://socket-front-update/lib/config/config-token.ts","ng://socket-front-update/lib/config/default.ts","ng://socket-front-update/lib/core/SocketWrapper.ts","ng://socket-front-update/lib/factory/SocketFactory.ts","ng://socket-front-update/lib/socket-front-update.module.ts","ng://socket-front-update/public-api.ts","ng://socket-front-update/socket-front-update.ts"],"sourcesContent":["/***********************************************************\n **  @project ngx-front-live-update                       **\n **  @file config-token                                   **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com> **\n **  @Date 26/03/2021                                     **\n ***********************************************************/\nimport {InjectionToken} from '@angular/core';\n\n\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG_' +\n  Math.floor(Math.random() * Math.floor(100)).toString() + '__');\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file default                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\n\n\nexport const DefaultSocketConfig = {\n  url : '',\n  path: '/socket.io',\n  reconnection: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  randomizationFactor: 0.5,\n  timeout: 20000,\n  autoConnect: true,\n  query: {},\n  transports: ['polling', 'websocket'],\n  extraHeaders: {}\n};\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file SocketWrapper                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\nimport {EventEmitter} from '@angular/core';\nimport {SocketIoConfig} from '../interface/Interface-config';\nimport {DefaultSocketConfig} from '../config/default';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\n\nexport class SocketWrapper {\n  public tokenUpdater: any = new EventEmitter();\n  public socket: any;\n  private subscribersCounter: number = 0;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(public url: string = '', public config?: { path: string; autoConnect: boolean; transports: string[]; query: {}; reconnectionDelayMax: number; extraHeaders: {}; reconnection: boolean; reconnectionAttempts: number; timeout: number; reconnectionDelay: number; randomizationFactor: number } | SocketIoConfig) {\n    this.config = !config ? DefaultSocketConfig : config;\n  }\n\n  roomData(name: string, callback: () => void) {\n    this.socket.join(name);\n    this.socket.on(name, callback);\n  }\n\n  of(namespace: string): void {\n    this.socket.of(namespace);\n  };\n\n  on(eventName: string, callback: (data: any) => void): void {\n    this.socket.on(eventName, callback);\n  };\n\n  once(eventName: string, callback: (data: any) => void): void {\n    this.socket.once(eventName, callback);\n  };\n\n  connect() {\n    const ioSocket = (io as any).default ? (io as any).default : io;\n    return ioSocket(this.url, this.config).connect();\n  }\n\n  disconnect(close?: any): any {\n    return this.socket.disconnect.apply(this.socket, arguments);\n  }\n\n  emit(eventName: string, data?: any, callback?: (data: any) => void): any {\n    this.socket.emit(eventName, data, callback);\n  };\n\n  removeListener(eventName: string, callback?: () => void): any {\n    return this.socket.removeListener.apply(this.socket, arguments);\n  };\n\n  removeAllListeners(eventName?: string): any {\n    return this.socket.removeAllListeners.apply(this.socket, arguments);\n  };\n\n  fromEvent<T>(eventName: string): Observable<any> {\n    this.subscribersCounter++;\n    return new Observable((observer: any) => {\n      this.socket.on(eventName, (data: any) => {\n        observer.next(data);\n      });\n      return () => {\n        if (this.subscribersCounter === 1) {\n          this.socket.removeListener(eventName);\n        }\n      };\n    }).pipe(share());\n  };\n\n  fromOneTimeEvent<T>(eventName: string): Promise<any> {\n    return new Promise(resolve => this.once(eventName, resolve));\n  };\n\n}\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file SocketFactory                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\nimport {SocketIoConfig} from '../interface/Interface-config';\nimport {SocketWrapper} from '../core/SocketWrapper';\n\nexport const SocketFactory = (url: string = '', config: { path: string; autoConnect: boolean; transports: string[]; query: {}; reconnectionDelayMax: number; extraHeaders: {}; reconnection: boolean; reconnectionAttempts: number; timeout: number; reconnectionDelay: number; randomizationFactor: number } | SocketIoConfig) => {\n  return new SocketWrapper(url, config);\n};\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {SOCKET_CONFIG_TOKEN} from './config/config-token';\nimport {SocketWrapper} from './core/SocketWrapper';\nimport {SocketFactory} from './factory/SocketFactory';\n\n@NgModule({})\nexport class SocketFrontUpdateModule {\n  public static forRoot(config: { url: string, config: SocketIoConfig }): ModuleWithProviders<SocketFrontUpdateModule> {\n    return {\n      ngModule: SocketFrontUpdateModule,\n      providers: [\n        {provide: SOCKET_CONFIG_TOKEN, useValue: config},\n        {\n          provide: SocketWrapper,\n          useFactory: SocketFactory,\n          deps: [SOCKET_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\nexport {SocketFrontUpdateModule as SocketIoModule, SocketWrapper as Socket, SOCKET_CONFIG_TOKEN, SocketFactory};\n","/*\n * Public API Surface of socket-front-update\n */\nexport * from './lib/socket-front-update.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["io.default"],"mappings":"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"}