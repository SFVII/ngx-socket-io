{"version":3,"file":"socket-front-update.js","sources":["ng://socket-front-update/lib/config/default.ts","ng://socket-front-update/lib/socket-front-update.service.ts","ng://socket-front-update/lib/socket-front-update.module.ts","ng://socket-front-update/public-api.ts","ng://socket-front-update/socket-front-update.ts"],"sourcesContent":["/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file default                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\n\n\nexport const DefaultSocketConfig = {\n  url : '',\n  path: '/socket.io',\n  reconnection: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  randomizationFactor: 0.5,\n  timeout: 20000,\n  autoConnect: true,\n  query: {},\n  transports: ['polling', 'websocket'],\n  extraHeaders: {}\n};\n","import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {SocketConfig, SocketIoConfig} from './interface/Interface-config';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nimport {DefaultSocketConfig} from './config/default';\n//import {SOCKET_CONFIG_TOKEN} from './socket-front-update.module';\n\n// @dynamic\n@Injectable()\nexport class SocketWrapper {\n  public tokenUpdater?: any = new EventEmitter();\n  public socket?: any;\n  public url?: string;\n  public loginPage?: string;\n  public auth?: boolean;\n  private subscribersCounter?: number = 0;\n  private roomList: string[] = [];\n  private readonly SocketConfig: SocketConfig = DefaultSocketConfig;\n\n  constructor(@Inject('__SocketWrapper__') private Config: SocketIoConfig) {\n    this.Config = Config;\n    if (!this.SocketConfig) {\n      this.SocketConfig = {};\n    }\n    for (let key in Config) {\n      if (key.includes('socket_')) {\n        this.SocketConfig[key.replace('socket_', '')] = Config[key];\n      }\n    }\n    this.url = (!Config || Config && !Config.url) ? '' : Config.url;\n    if ((Config && !Config.auth || !Config)) {\n      this.socket = this.connect();\n      this.onReconnect();\n    } else {\n      this.socket = this.connect();\n      this.tokenUpdater.subscribe((token: string) => {\n        this.disconnect();\n        if (token) {\n          if (!this.SocketConfig.extraHeaders) {\n            this.SocketConfig.extraHeaders = {};\n          }\n          if (!this.SocketConfig.transportOptions) {\n            this.SocketConfig.transportOptions = {};\n          }\n          for (let en of this.SocketConfig.transports) {\n            this.SocketConfig.transportOptions[en] = {\n              extraHeaders: {\n                Authorization: `Baerer ${token}`\n              }\n            };\n          }\n          this.SocketConfig.extraHeaders.Authorization = `Baerer ${token}`;\n          this.SocketConfig.query.token = `${token}`;\n          this.socket = this.connect();\n          if (Config && Config.loginPage) {\n            this.redirectLogin(Config.loginPage);\n          }\n          this.onReconnect();\n        }\n      });\n    }\n  }\n\n  subscribe(name: string) {\n    this.socket.emit('joinroom', name);\n    this.roomList.push(name);\n  }\n\n  of(namespace: string): void {\n    this.socket.of(namespace);\n  };\n\n  on(eventName: string, callback: (data: any) => void): void {\n    this.socket.on(eventName, callback);\n  };\n\n  once(eventName: string, callback: (data: any) => void): void {\n    this.socket.once(eventName, callback);\n  };\n\n  connect() {\n    console.log('Config', this.SocketConfig);\n    const ioSocket = (io as any).default ? (io as any).default : io;\n    return ioSocket(this.url, this.SocketConfig).connect();\n  }\n\n  disconnect(close?: any): any {\n    return this.socket.disconnect.apply(this.socket, arguments);\n  }\n\n  emit(eventName: string, data?: any, callback?: (data: any) => void): any {\n    this.socket.emit(eventName, data, callback);\n  };\n\n  removeListener(eventName: string, callback?: () => void): any {\n    return this.socket.removeListener.apply(this.socket, arguments);\n  };\n\n  removeAllListeners(eventName?: string): any {\n    return this.socket.removeAllListeners.apply(this.socket, arguments);\n  };\n\n  fromEvent<T>(eventName: string): Observable<any> {\n    this.subscribersCounter++;\n    return new Observable((observer: any) => {\n      this.socket.on(eventName, (data: any) => {\n        observer.next(data);\n      });\n      return () => {\n        if (this.subscribersCounter === 1) {\n          this.socket.removeListener(eventName);\n        }\n      };\n    }).pipe(share());\n  };\n\n  fromOneTimeEvent<T>(eventName: string): Promise<any> {\n    return new Promise(resolve => this.once(eventName, resolve));\n  };\n\n  private onReconnect() {\n    if (this.socket) {\n      this.socket.on('reconnect', () => {\n        if (this.roomList && this.roomList.length) {\n          console.log('current rooms', this.roomList.length);\n          this.roomList.forEach((name: string) => {\n            this.subscribe(name);\n          });\n        } else {\n          console.log('room is empty');\n        }\n      });\n    } else {\n      console.log('socket does not exist');\n    }\n  }\n\n  private redirectLogin(loginPage: string) {\n    if (this.socket && loginPage) {\n      this.socket.on('session-time-out', (msg: any) => {\n        window.location.replace(loginPage);\n      });\n    }\n  }\n}\n","import {InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {SocketWrapper} from './socket-front-update.service';\n\n// tslint:disable-next-line:max-line-length\nexport function SocketFactory(config: SocketIoConfig) {\n  return (config);\n}\n\n//export const SOCKET_CONFIG_TOKEN = new InjectionToken<SocketIoConfig>('__SocketWrapper__');\n\n@NgModule({\n  providers: [SocketWrapper]\n})\nclass SocketIoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: SocketIoModule) {\n    if (parentModule) {\n      throw new Error(\n        'SocketFrontUpdateModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: SocketIoConfig): ModuleWithProviders<SocketIoModule> {\n    return {\n      ngModule: SocketIoModule,\n      providers: [\n        //SocketWrapper,\n        {provide: '__SocketWrapper__', useValue: config},\n         SocketWrapper\n      ]\n    };\n  }\n}\n\nexport {SocketIoModule};\n\n","/*\n * Public API Surface of socket-front-update\n */\nexport {SocketWrapper as Socket} from './lib/socket-front-update.service';\nexport * from './lib/socket-front-update.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {SocketIoConfig as Éµa} from './lib/interface/Interface-config';"],"names":["io.default"],"mappings":";;;;;;;AAAA;;;;;;AAQO,IAAM,mBAAmB,GAAG;IACjC,GAAG,EAAG,EAAE;IACR,IAAI,EAAE,YAAY;IAClB,YAAY,EAAE,IAAI;IAClB,oBAAoB,EAAE,QAAQ;IAC9B,iBAAiB,EAAE,IAAI;IACvB,oBAAoB,EAAE,IAAI;IAC1B,mBAAmB,EAAE,GAAG;IACxB,OAAO,EAAE,KAAK;IACd,WAAW,EAAE,IAAI;IACjB,KAAK,EAAE,EAAE;IACT,UAAU,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;IACpC,YAAY,EAAE,EAAE;CACjB;;ACfD;AAEA;;IAYE,uBAAiD,MAAsB;QAAvE,iBA0CC;QA1CgD,WAAM,GAAN,MAAM,CAAgB;QAThE,iBAAY,GAAS,IAAI,YAAY,EAAE,CAAC;QAKvC,uBAAkB,GAAY,CAAC,CAAC;QAChC,aAAQ,GAAa,EAAE,CAAC;QACf,iBAAY,GAAiB,mBAAmB,CAAC;QAGhE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;QACD,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;YACtB,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC3B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aAC7D;SACF;QACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC;QAChE,KAAK,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG;YACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAa;;gBACxC,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE;wBACnC,KAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;qBACrC;oBACD,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;wBACvC,KAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,EAAE,CAAC;qBACzC;;wBACD,KAAe,IAAA,KAAA,SAAA,KAAI,CAAC,YAAY,CAAC,UAAU,CAAA,gBAAA,4BAAE;4BAAxC,IAAI,EAAE,WAAA;4BACT,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG;gCACvC,YAAY,EAAE;oCACZ,aAAa,EAAE,YAAU,KAAO;iCACjC;6BACF,CAAC;yBACH;;;;;;;;;oBACD,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,GAAG,YAAU,KAAO,CAAC;oBACjE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,KAAG,KAAO,CAAC;oBAC3C,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,EAAE,CAAC;oBAC7B,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;wBAC9B,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;qBACtC;oBACD,KAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;aACF,CAAC,CAAC;SACJ;KACF;IAED,iCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,0BAAE,GAAF,UAAG,SAAiB;QAClB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;KAC3B;IAAA,CAAC;IAEF,0BAAE,GAAF,UAAG,SAAiB,EAAE,QAA6B;QACjD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KACrC;IAAA,CAAC;IAEF,4BAAI,GAAJ,UAAK,SAAiB,EAAE,QAA6B;QACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KACvC;IAAA,CAAC;IAEF,+BAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAM,QAAQ,GAAIA,WAAkB,GAAIA,WAAkB,GAAG,EAAE,CAAC;QAChE,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;KACxD;IAED,kCAAU,GAAV,UAAW,KAAW;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KAC7D;IAED,4BAAI,GAAJ,UAAK,SAAiB,EAAE,IAAU,EAAE,QAA8B;QAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC7C;IAAA,CAAC;IAEF,sCAAc,GAAd,UAAe,SAAiB,EAAE,QAAqB;QACrD,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KACjE;IAAA,CAAC;IAEF,0CAAkB,GAAlB,UAAmB,SAAkB;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KACrE;IAAA,CAAC;IAEF,iCAAS,GAAT,UAAa,SAAiB;QAA9B,iBAYC;QAXC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,OAAO,IAAI,UAAU,CAAC,UAAC,QAAa;YAClC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,IAAS;gBAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB,CAAC,CAAC;YACH,OAAO;gBACL,IAAI,KAAI,CAAC,kBAAkB,KAAK,CAAC,EAAE;oBACjC,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;iBACvC;aACF,CAAC;SACH,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAAA,CAAC;IAEF,wCAAgB,GAAhB,UAAoB,SAAiB;QAArC,iBAEC;QADC,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,GAAA,CAAC,CAAC;KAC9D;IAAA,CAAC;IAEM,mCAAW,GAAnB;QAAA,iBAeC;QAdC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE;gBAC1B,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACzC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACnD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAY;wBACjC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;qBACtB,CAAC,CAAC;iBACJ;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;SACtC;KACF;IAEO,qCAAa,GAArB,UAAsB,SAAiB;QACrC,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,GAAQ;gBAC1C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aACpC,CAAC,CAAC;SACJ;KACF;;gDA5HY,MAAM,SAAC,mBAAmB;;IAV5B,aAAa;QADzB,UAAU,EAAE;QAWE,WAAA,MAAM,CAAC,mBAAmB,CAAC,CAAA;;OAV7B,aAAa,CAuIzB;IAAD,oBAAC;CAvID;;ACNA;SACgB,aAAa,CAAC,MAAsB;IAClD,QAAQ,MAAM,EAAE;AAClB,CAAC;AAED;;IAME,wBAAoC,YAA6B;QAC/D,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,4EAA4E,CAAC,CAAC;SACjF;KACF;uBANG,cAAc;IAQJ,sBAAO,GAArB,UAAsB,MAAsB;QAC1C,OAAO;YACL,QAAQ,EAAE,gBAAc;YACxB,SAAS,EAAE;;gBAET,EAAC,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAC/C,aAAa;aACf;SACF,CAAC;KACH;;;gBAhBkD,cAAc,uBAApD,QAAQ,YAAI,QAAQ;;IAD7B,cAAc;QAHnB,QAAQ,CAAC;YACR,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;QAEa,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,QAAQ,EAAE,CAAA;yCAAgB,cAAc;OAD7D,cAAc,CAkBnB;IAAD,qBAAC;CAlBD;;ACdA;;;;ACAA;;;;;;"}