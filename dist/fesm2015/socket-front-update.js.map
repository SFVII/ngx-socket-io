{"version":3,"file":"socket-front-update.js","sources":["ng://socket-front-update/lib/socket-front-update.service.ts","ng://socket-front-update/lib/socket-front-update.module.ts","ng://socket-front-update/public-api.ts","ng://socket-front-update/socket-front-update.ts"],"sourcesContent":["import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {SocketConfig, SocketIoConfig} from './interface/Interface-config';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\n// @dynamic\n@Injectable()\nexport class SocketWrapper {\n  public tokenUpdater: any = new EventEmitter();\n  public socket: any;\n  public socket_path?: string; // default = '/socket.io'\n  public socket_reconnection?: boolean; // default true\n  public socket_reconnectionAttempts?: number; // default Infinity\n  public socket_reconnectionDelay?: number; // default 1000\n  public socket_reconnectionDelayMax?: number; // default 5000\n  public socket_randomizationFactor?: number; // default 0.5,\n  public socket_timeout?: number; // default 20000,\n  public socket_autoConnect?: boolean; // default true,\n  public socket_query?: any; // default {}\n  public socket_extraHeaders?: any; // default {}\n  public socket_transports?: string[];\n  public url: string;\n  public loginPage: string;\n  public auth: boolean;\n  private subscribersCounter: number = 0;\n\n  // tslint:disable-next-line:max-line-length\n  private Config: SocketIoConfig;\n  private SocketConfig: SocketConfig;\n\n  constructor(@Inject('__SocketWrapper__') Config) {\n    this.Config = Config;\n    for (let key in Config) {\n      if (key.includes('socket_')) {\n        this.SocketConfig[key.replace('socket_', '')] = Config[key];\n      }\n    }\n    this.url = (!Config || Config && !Config.url) ? '' : Config.url;\n    if ((Config && !Config.auth || !Config)) {\n      this.socket = this.connect();\n    } else {\n      this.tokenUpdater.subscribe((token: string) => {\n        if (token) {\n          if (!this.SocketConfig.extraHeaders) {\n            this.SocketConfig.extraHeaders = {};\n          }\n          this.SocketConfig.extraHeaders.Authorization = `Baerer ${token}`;\n          this.socket = this.connect();\n          if (Config && Config.loginPage) {\n            this.redirectLogin(Config.loginPage);\n          }\n        }\n      });\n    }\n  }\n\n  roomData(name: string, callback: () => void) {\n    this.socket.emit('joinroom', name);\n    this.socket.on(name, callback);\n  }\n\n  of(namespace: string): void {\n    this.socket.of(namespace);\n  };\n\n  on(eventName: string, callback: (data: any) => void): void {\n    this.socket.on(eventName, callback);\n  };\n\n  once(eventName: string, callback: (data: any) => void): void {\n    this.socket.once(eventName, callback);\n  };\n\n  connect() {\n    const ioSocket = (io as any).default ? (io as any).default : io;\n    return ioSocket(this.url, this.SocketConfig).connect();\n  }\n\n  disconnect(close?: any): any {\n    return this.socket.disconnect.apply(this.socket, arguments);\n  }\n\n  emit(eventName: string, data?: any, callback?: (data: any) => void): any {\n    this.socket.emit(eventName, data, callback);\n  };\n\n  removeListener(eventName: string, callback?: () => void): any {\n    return this.socket.removeListener.apply(this.socket, arguments);\n  };\n\n  removeAllListeners(eventName?: string): any {\n    return this.socket.removeAllListeners.apply(this.socket, arguments);\n  };\n\n  fromEvent<T>(eventName: string): Observable<any> {\n    this.subscribersCounter++;\n    return new Observable((observer: any) => {\n      this.socket.on(eventName, (data: any) => {\n        observer.next(data);\n      });\n      return () => {\n        if (this.subscribersCounter === 1) {\n          this.socket.removeListener(eventName);\n        }\n      };\n    }).pipe(share());\n  };\n\n  fromOneTimeEvent<T>(eventName: string): Promise<any> {\n    return new Promise(resolve => this.once(eventName, resolve));\n  };\n\n  private redirectLogin(loginPage: string) {\n    if (this.socket && loginPage) {\n      this.socket.on('session-time-out', (msg: any) => {\n        window.location.replace(loginPage);\n      });\n    }\n  }\n}\n","import {InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {SocketWrapper} from './socket-front-update.service';\n\n// tslint:disable-next-line:max-line-length\nexport function SocketFactory(config: SocketIoConfig) {\n  return (config);\n}\n\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken<SocketIoConfig>('__SocketWrapper__');\n\n@NgModule({\n  providers : [SocketWrapper]\n})\nclass SocketIoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: SocketIoModule) {\n    if (parentModule) {\n      throw new Error(\n        'SocketFrontUpdateModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: SocketWrapper): ModuleWithProviders<SocketIoModule> {\n    return {\n      ngModule: SocketIoModule,\n      providers: [\n        {provide: SOCKET_CONFIG_TOKEN, useValue: config},\n        {\n          provide: SocketWrapper,\n          useFactory: SocketFactory,\n          deps: [SOCKET_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\nexport {SocketIoModule};\n\n","/*\n * Public API Surface of socket-front-update\n */\nexport {SocketWrapper as Socket} from './lib/socket-front-update.service';\nexport * from './lib/socket-front-update.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["io.default"],"mappings":"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"}