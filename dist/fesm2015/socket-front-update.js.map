{"version":3,"file":"socket-front-update.js","sources":["ng://socket-front-update/lib/config/default.ts","ng://socket-front-update/lib/socket-front-update.service.ts","ng://socket-front-update/lib/config/config-token.ts","ng://socket-front-update/lib/factory/SocketFactory.ts","ng://socket-front-update/lib/socket-front-update.module.ts","ng://socket-front-update/public-api.ts","ng://socket-front-update/socket-front-update.ts"],"sourcesContent":["/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file default                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\n\n\nexport const DefaultSocketConfig = {\n  url : '',\n  path: '/socket.io',\n  reconnection: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  randomizationFactor: 0.5,\n  timeout: 20000,\n  autoConnect: true,\n  query: {},\n  transports: ['polling', 'websocket'],\n  extraHeaders: {}\n};\n","import {EventEmitter, Optional} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {DefaultSocketConfig} from './config/default';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nimport { Inject } from '@angular/core';\n// @dynamic\nexport class SocketFrontUpdateService {\n\n  public tokenUpdater: any = new EventEmitter();\n  public socket: any;\n  private subscribersCounter: number = 0;\n  private url: string;\n  // tslint:disable-next-line:max-line-length\n  private config: { path?: string; autoConnect?: boolean; transports?: string[]; query?: {}; reconnectionDelayMax?: number; extraHeaders?: {}; reconnection?: boolean; reconnectionAttempts?: number; timeout?: number; reconnectionDelay?: number; randomizationFactor?: number } | SocketIoConfig;\n\n  constructor(@Optional() Config?: { url?: string; config?: SocketIoConfig, auth?: boolean, loginPage?: string }) {\n    this.config = !Config ? DefaultSocketConfig : Config.config;\n    this.url = !Config ? '' : Config.url;\n    if (Config && !Config.auth) {\n      this.socket = this.connect();\n    } else {\n      this.tokenUpdater.subscribe((token: string) => {\n        if (token) {\n          this.config.extraHeaders.Authorization = `Baerer ${token}`;\n          this.socket = this.connect();\n          this.redirectLogin(Config.loginPage);\n        }\n      });\n    }\n  }\n\n  roomData(name: string, callback: () => void) {\n    this.socket.emit('joinroom', name);\n    this.socket.on(name, callback);\n  }\n\n  of(namespace: string): void {\n    this.socket.of(namespace);\n  };\n\n  on(eventName: string, callback: (data: any) => void): void {\n    this.socket.on(eventName, callback);\n  };\n\n  once(eventName: string, callback: (data: any) => void): void {\n    this.socket.once(eventName, callback);\n  };\n\n  connect() {\n    const ioSocket = (io as any).default ? (io as any).default : io;\n    return ioSocket(this.url, this.config).connect();\n  }\n\n  disconnect(close?: any): any {\n    return this.socket.disconnect.apply(this.socket, arguments);\n  }\n\n  emit(eventName: string, data?: any, callback?: (data: any) => void): any {\n    this.socket.emit(eventName, data, callback);\n  };\n\n  removeListener(eventName: string, callback?: () => void): any {\n    return this.socket.removeListener.apply(this.socket, arguments);\n  };\n\n  removeAllListeners(eventName?: string): any {\n    return this.socket.removeAllListeners.apply(this.socket, arguments);\n  };\n\n  fromEvent<T>(eventName: string): Observable<any> {\n    this.subscribersCounter++;\n    return new Observable((observer: any) => {\n      this.socket.on(eventName, (data: any) => {\n        observer.next(data);\n      });\n      return () => {\n        if (this.subscribersCounter === 1) {\n          this.socket.removeListener(eventName);\n        }\n      };\n    }).pipe(share());\n  };\n\n  fromOneTimeEvent<T>(eventName: string): Promise<any> {\n    return new Promise(resolve => this.once(eventName, resolve));\n  };\n\n  private redirectLogin(loginPage: string) {\n    if (this.socket && loginPage) {\n      this.socket.on('session-time-out', (msg: any) => {\n        window.location.replace(loginPage);\n      });\n    }\n  }\n}\n","/***********************************************************\n **  @project ngx-front-live-update                       **\n **  @file config-token                                   **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com> **\n **  @Date 26/03/2021                                     **\n ***********************************************************/\nimport {InjectionToken} from '@angular/core';\nimport {SocketIoConfig} from '../interface/Interface-config';\n\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken<SocketIoConfig>('__SOCKET_IO_CONFIG_');\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file SocketFactory                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\nimport {SocketIoConfig} from '../interface/Interface-config';\nimport {SocketFrontUpdateService} from '../socket-front-update.service';\n\nexport function SocketFactory(config: { url?: string, config?: { path?: string; autoConnect?: boolean; transports?: string[]; query?: {}; reconnectionDelayMax?: number; extraHeaders?: {}; reconnection?: boolean; reconnectionAttempts?: number; timeout?: number; reconnectionDelay?: number; randomizationFactor?: number } | SocketIoConfig, auth?: boolean, loginPage?: string }) {\n  return new SocketFrontUpdateService(config);\n};\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {SOCKET_CONFIG_TOKEN} from './config/config-token';\nimport {SocketFactory} from './factory/SocketFactory';\nimport {SocketFrontUpdateService} from './socket-front-update.service';\n// @dynamic\n@NgModule({})\nexport class SocketFrontUpdateModule {\n  constructor(@Optional() @SkipSelf() parentModule?: SocketFrontUpdateModule) {\n    if (parentModule) {\n      throw new Error(\n        'SocketFrontUpdateModule is already loaded. Import it in the AppModule only');\n    }\n  }\n  public static forRoot(config: { url?: string, config?: SocketIoConfig, auth?: boolean, loginPage?: string }): ModuleWithProviders {\n    return {\n      ngModule: SocketFrontUpdateModule,\n      providers: [\n        {provide: SOCKET_CONFIG_TOKEN, useValue: config},\n        {\n          provide: SocketFrontUpdateService,\n          useFactory: SocketFactory,\n          deps: [SOCKET_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\nexport {SocketFrontUpdateModule as SocketIoModule, SocketFrontUpdateService as Socket, SOCKET_CONFIG_TOKEN, SocketFactory};\n","/*\n * Public API Surface of socket-front-update\n */\nexport * from './lib/socket-front-update.service';\nexport * from './lib/socket-front-update.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["io.default"],"mappings":"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"}