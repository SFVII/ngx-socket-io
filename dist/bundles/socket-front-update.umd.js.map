{"version":3,"file":"socket-front-update.umd.js","sources":["ng://socket-front-update/lib/config/config-token.ts","ng://socket-front-update/lib/config/default.ts","ng://socket-front-update/lib/core/SocketWrapper.ts","ng://socket-front-update/lib/factory/SocketFactory.ts","ng://socket-front-update/lib/socket-front-update.module.ts"],"sourcesContent":["/***********************************************************\n **  @project ngx-front-live-update                       **\n **  @file config-token                                   **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com> **\n **  @Date 26/03/2021                                     **\n ***********************************************************/\nimport {InjectionToken} from '@angular/core';\n\n\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG_' +\n  Math.floor(Math.random() * Math.floor(100)).toString() + '__');\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file default                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\n\n\nexport const DefaultSocketConfig = {\n  url : '',\n  path: '/socket.io',\n  reconnection: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  randomizationFactor: 0.5,\n  timeout: 20000,\n  autoConnect: true,\n  query: {},\n  transports: ['polling', 'websocket'],\n  extraHeaders: {}\n};\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file SocketWrapper                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\nimport {EventEmitter} from '@angular/core';\nimport {SocketIoConfig} from '../interface/Interface-config';\nimport {DefaultSocketConfig} from '../config/default';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\n\nexport class SocketWrapper {\n  public tokenUpdater: any = new EventEmitter();\n  public socket: any;\n  private subscribersCounter: number = 0;\n  private url: string;\n  // tslint:disable-next-line:max-line-length\n  private config: { path?: string; autoConnect?: boolean; transports?: string[]; query?: {}; reconnectionDelayMax?: number; extraHeaders?: {}; reconnection?: boolean; reconnectionAttempts?: number; timeout?: number; reconnectionDelay?: number; randomizationFactor?: number } | SocketIoConfig;\n\n  constructor(public Config?: { url?: string; config?: SocketIoConfig, auth?: boolean, loginPage?: string }) {\n    this.config = !Config ? DefaultSocketConfig : Config.config;\n    this.url = !Config ? '' : Config.url;\n    if (Config && !Config.auth) {\n      this.socket = this.connect();\n    } else {\n      this.tokenUpdater.subscribe((token: string) => {\n        if (token) {\n          this.config.extraHeaders.Authorization = `Baerer ${token}`;\n          this.socket = this.connect();\n          this.redirectLogin(Config.loginPage);\n        }\n      });\n    }\n  }\n\n  roomData(name: string, callback: () => void) {\n    this.socket.join(name);\n    this.socket.on(name, callback);\n  }\n\n  of(namespace: string): void {\n    this.socket.of(namespace);\n  };\n\n  on(eventName: string, callback: (data: any) => void): void {\n    this.socket.on(eventName, callback);\n  };\n\n  once(eventName: string, callback: (data: any) => void): void {\n    this.socket.once(eventName, callback);\n  };\n\n  connect() {\n    const ioSocket = (io as any).default ? (io as any).default : io;\n    return ioSocket(this.url, this.config).connect();\n  }\n\n  disconnect(close?: any): any {\n    return this.socket.disconnect.apply(this.socket, arguments);\n  }\n\n  emit(eventName: string, data?: any, callback?: (data: any) => void): any {\n    this.socket.emit(eventName, data, callback);\n  };\n\n  removeListener(eventName: string, callback?: () => void): any {\n    return this.socket.removeListener.apply(this.socket, arguments);\n  };\n\n  removeAllListeners(eventName?: string): any {\n    return this.socket.removeAllListeners.apply(this.socket, arguments);\n  };\n\n  fromEvent<T>(eventName: string): Observable<any> {\n    this.subscribersCounter++;\n    return new Observable((observer: any) => {\n      this.socket.on(eventName, (data: any) => {\n        observer.next(data);\n      });\n      return () => {\n        if (this.subscribersCounter === 1) {\n          this.socket.removeListener(eventName);\n        }\n      };\n    }).pipe(share());\n  };\n\n  fromOneTimeEvent<T>(eventName: string): Promise<any> {\n    return new Promise(resolve => this.once(eventName, resolve));\n  };\n\n  private redirectLogin(loginPage: string) {\n    if (this.socket && loginPage) {\n      this.socket.on('session-time-out', (msg: any) => {\n        window.location.replace(loginPage);\n      });\n    }\n  }\n\n}\n","/***********************************************************\n **  @project ngx-front-live-update                              **\n **  @file SocketFactory                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 26/03/2021                                         **\n ***********************************************************/\nimport {SocketIoConfig} from '../interface/Interface-config';\nimport {SocketWrapper} from '../core/SocketWrapper';\n\nexport const SocketFactory = (config: { url?: string, config?: { path?: string; autoConnect?: boolean; transports?: string[]; query?: {}; reconnectionDelayMax?: number; extraHeaders?: {}; reconnection?: boolean; reconnectionAttempts?: number; timeout?: number; reconnectionDelay?: number; randomizationFactor?: number } | SocketIoConfig, auth?: boolean, loginPage?: string  }) => {\n  return new SocketWrapper(config);\n};\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {SocketIoConfig} from './interface/Interface-config';\nimport {SOCKET_CONFIG_TOKEN} from './config/config-token';\nimport {SocketWrapper} from './core/SocketWrapper';\nimport {SocketFactory} from './factory/SocketFactory';\n\n@NgModule({})\nexport class SocketFrontUpdateModule {\n  public static forRoot(config: { url?: string, config?: SocketIoConfig, auth?: boolean, loginPage?: string }): ModuleWithProviders<SocketFrontUpdateModule> {\n    return {\n      ngModule: SocketFrontUpdateModule,\n      providers: [\n        {provide: SOCKET_CONFIG_TOKEN, useValue: config},\n        {\n          provide: SocketWrapper,\n          useFactory: SocketFactory,\n          deps: [SOCKET_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\nexport {SocketFrontUpdateModule as SocketIoModule, SocketWrapper as Socket, SOCKET_CONFIG_TOKEN, SocketFactory};\n"],"names":["InjectionToken","EventEmitter","io.default","io","Observable","share","NgModule"],"mappings":"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"}